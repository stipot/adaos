from __future__ import annotations
from typing import Protocol, Optional, Dict, Any, Iterable, Literal

SecretScope = Literal["profile", "global"]  # можно расширить позже (per-user/tenant)


class Secrets(Protocol):
    def put(self, key: str, value: str, *, scope: SecretScope = "profile", meta: Optional[Dict[str, Any]] = None) -> None: ...
    def get(self, key: str, *, default: Optional[str] = None, scope: SecretScope = "profile") -> Optional[str]: ...
    def delete(self, key: str, *, scope: SecretScope = "profile") -> None: ...
    def list(self, *, scope: SecretScope = "profile") -> list[Dict[str, Any]]: ...
    def import_items(self, items: Iterable[Dict[str, Any]], *, scope: SecretScope = "profile") -> int: ...
    def export_items(self, *, scope: SecretScope = "profile") -> list[Dict[str, Any]]: ...
